// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 2>;
            then-layer = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            display-name = "DEFAULT";
            bindings = <
&kp Q        &kp W             &kp E           &kp R            &kp T          &kp Y        &kp U            &kp I            &kp O              &kp P
&ht LCTRL A  &ht LEFT_SHIFT S  &ht LEFT_ALT D  &ht LEFT_GUI F   &kp G          &kp H        &ht RIGHT_GUI J  &ht RIGHT_ALT K  &ht RIGHT_SHIFT L  &ht RIGHT_CONTROL SEMICOLON
&kp Z        &kp X             &kp C           &kp V            &kp B          &kp N        &kp M            &kp COMMA        &kp DOT            &kp SLASH
                                               &lt 4 BACKSPACE  &lt 2 SPACE    &lt 1 ENTER  &kp TAB
            >;
        };

        Num_nav {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7          &kp N8        &kp N9     &kp N0
&trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans
                        &trans  &trans    &trans    &trans
            >;
        };

        mouse {
            display-name = "Mouse";
            bindings = <
&kp ESCAPE          &trans    &trans    &trans    &bootloader    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
&kp GRAVE           &mkp MB3  &mkp MB2  &mkp MB1  &trans         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&kp LA(LEFT_SHIFT)  &trans    &trans    &trans    &trans         &trans          &trans          &trans        &trans           &trans
                                        &trans    &trans         &trans          &trans
            >;
        };

        Symbol {
            bindings = <
&trans  &kp LESS_THAN      &kp EQUAL  &kp GREATER_THAN  &trans        &kp N6  &kp APOS        &kp MINUS      &kp GRAVE        &trans
&trans  &kp LS(BACKSLASH)  &kp MINUS  &kp LS(N0)        &kp PLUS      &kp N5  &kp LEFT_BRACE  &kp SEMI       &kp RIGHT_BRACE  &kp N1
&trans  &kp ASTRK          &kp COLON  &kp FSLH          &kp DOLLAR    &kp AT  &kp PIPE        &kp LS(GRAVE)  &kp AMPERSAND    &trans
                                      &trans            &trans        &trans  &trans
            >;
        };

        Func {
            bindings = <
&bootloader  &kp F1  &kp F2   &kp F3   &kp F4     &trans  &kp C_BRI_INC      &trans            &kp C_BRI_DEC    &trans
&trans       &kp F5  &kp F6   &kp F7   &kp F8     &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans
&trans       &kp F9  &kp F10  &kp F11  &kp F12    &trans  &kp C_PREV         &kp C_PLAY_PAUSE  &kp C_NEXT       &trans
                              &trans   &trans     &trans  &trans
            >;
        };
    };
};
